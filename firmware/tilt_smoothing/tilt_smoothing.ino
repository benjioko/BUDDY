#define stepPin 4
#define dirPin 3

const int dataLength = 125;
int deltaSteps[dataLength] = {
  -1, -2, -2, -3, -5, -5, -5, -7, -7, -7, -8, -8, -9, -9, -9, -9, -9, -10, -9, -9, -9, -9, -8, -8, -8, -7, -7, -6, -5, -5, -4, -4, -3, -3, -3, -3, -4, -3, -4, -5, -5, -6, -7, -8, -9, -11, -11, -11, -12, -12, -12, -11, -10, -10, -8, -7, -5, -3, -1, 0, 1, 1, 3, 2, 4, 4, 4, 5, 5, 6, 6, 7, 7, 7, 8, 8, 8, 8, 9, 9, 9, 10, 9, 10, 10, 10, 10, 10, 10, 10, 9, 10, 10, 10, 10, 9, 10, 9, 9, 9, 8, 8, 8, 8, 7, 7, 7, 6, 6, 5, 5, 4, 4, 4, 2, 3, 1, 1, 1, 0, 0, 0, 0, 0, 0
};
unsigned int delayTimes[dataLength] = {
  41600, 20850, 20849, 13866, 8339, 8340, 8319, 5957, 5957, 5942, 5212, 5212, 4622, 4633, 4633, 4622, 4633, 4169, 4622, 4633, 4633, 4622, 5212, 5212, 5199, 5957, 5957, 6933, 8340, 8340, 10399, 10425, 13900, 13866, 13900, 13900, 10399, 13900, 10425, 8319, 8340, 6950, 5942, 5212, 4633, 3781, 3790, 3790, 3466, 3475, 3475, 3781, 4170, 4170, 5199, 5957, 8340, 13866, 41700, 0, 41599, 41700, 13900, 20799, 10425, 10425, 10399, 8340, 8340, 6933, 6950, 5957, 5942, 5957, 5212, 5199, 5212, 5212, 4622, 4633, 4633, 4159, 4633, 4170, 4159, 4170, 4170, 4159, 4170, 4170, 4622, 4170, 4170, 4159, 4170, 4633, 4160, 4633, 4633, 4622, 5212, 5212, 5200, 5212, 5957, 5942, 5957, 6949, 6933, 8339, 8339, 10400, 10424, 10424, 20800, 13899, 41699, 41600, 41699, 0, 0, 0, 0, 0, 0
};

void setup() {
  pinMode(stepPin, OUTPUT);
  pinMode(dirPin, OUTPUT);
}

void loop() {
  for (int i = 0; i < dataLength; i++) {
    int direction = deltaSteps[i] >= 0 ? HIGH : LOW;
    digitalWrite(dirPin, direction);

    for (int j = 0; j < abs(deltaSteps[i]); j++) {
      digitalWrite(stepPin, HIGH);
      delayMicroseconds(delayTimes[i] / 2);
      digitalWrite(stepPin, LOW);
      delayMicroseconds(delayTimes[i] / 2);
    }
  }

  while (true); // Stop after completing motion
}
